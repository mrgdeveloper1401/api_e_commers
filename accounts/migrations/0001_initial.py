# Generated by Django 5.1 on 2024-08-14 08:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django_jalali.db.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("images", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "mobile_phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        unique=True,
                        verbose_name="mobile phone",
                    ),
                ),
                ("verify_email", models.BooleanField(default=False)),
                ("verify_phone", models.BooleanField(default=False)),
                (
                    "sheba_number",
                    models.CharField(
                        blank=True,
                        help_text="24 length number, start width IR",
                        max_length=24,
                        null=True,
                        verbose_name="sheba number",
                    ),
                ),
                ("is_accepted_sheba_number", models.BooleanField(default=False)),
                (
                    "bio",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="bio"
                    ),
                ),
                (
                    "date_joined",
                    django_jalali.db.models.jDateTimeField(
                        auto_now_add=True, null=True, verbose_name="date joined"
                    ),
                ),
                (
                    "birth_date",
                    django_jalali.db.models.jDateField(
                        blank=True, null=True, verbose_name="birth day"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("male", "male"), ("Female", "female")],
                        max_length=6,
                        null=True,
                        verbose_name="gender",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="image_user",
                        to="images.image",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PublicNotifications",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_at",
                    django_jalali.db.models.jDateTimeField(auto_now_add=True),
                ),
                ("update_at", django_jalali.db.models.jDateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    django_jalali.db.models.jDateTimeField(
                        blank=True, editable=False, null=True
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                ("url", models.URLField(blank=True, null=True, verbose_name="url")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("is_read", models.BooleanField(default=False)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="public_notification",
                        to="images.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "public notification",
                "verbose_name_plural": "public notifications",
                "db_table": "public_notifications",
            },
        ),
    ]
